# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.22'

    - name: Build
      run: go build -v ./...

    - name: Test
      run: go test -v ./...

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Deploy to EC2
      env:
        EC2_HOST: ${{ secrets.AWS_EC2_HOST }}
        EC2_USER: ${{ secrets.AWS_EC2_USER }}
        EC2_KEY: ${{ secrets.AWS_EC2_KEY }}
      run: |
        echo "${EC2_KEY}" > key.pem
        chmod 600 key.pem
        scp -o StrictHostKeyChecking=no -i key.pem -r ./* ${EC2_USER}@${EC2_HOST}:/home/${EC2_USER}/app
        ssh -o StrictHostKeyChecking=no -i key.pem ${EC2_USER}@${EC2_HOST} << 'EOF'
        cd go-unit-integration-testing/
        pkill -f userApiTest || true
        git pull
        go build
        nohup ./userApiTest > app.log 2>&1 &
        exit
        EOF